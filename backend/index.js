import express from "express";
import "dotenv/config";
import swaggerJsdoc from "swagger-jsdoc";
import swaggerUi from "swagger-ui-express";
import { roleMiddleWare } from "./middlewares/roleMiddleware.js";
import cors from "cors";
import { loginUser, registerUser } from "./controllers/session.js";
import { getUser } from "./controllers/user.js";
import { getAdmin } from "./controllers/admin.js";
import connectDB from "./config/connectDB.js";
import {
  createProduct,
  deleteProduct,
  getProduct,
  getProducts,
  updateProduct,
} from "./controllers/product.js";
import { authMiddleware } from "./middlewares/authMiddleware.js";
import {
  addToCart,
  getCart,
  removeFromCart,
  updateCart,
} from "./controllers/cart.js";
import Env from './utils/Env.js'

const app = express();

await connectDB();

// swagger
const options = {
  definition: {
    openapi: "3.1.0",
    info: {
      title: "Express API with Swagger",
      version: "1.0.0",
      description:
        "A simple CRUD API application with autogenerated Swagger documentation",
    },
    servers: [
      {
        url: "http://localhost:5000",
      },
    ],
  },
  apis: ["./controllers/*.js"], // Path to the API docs
};
const specs = swaggerJsdoc(options);
app.use("/docs", swaggerUi.serve, swaggerUi.setup(specs));

// middlewares
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cors({ credentials: true }));

// login user
app.post("/login", loginUser);

// create user
app.post("/register", registerUser);

// get admin
app.get("/admin", authMiddleware, roleMiddleWare, getAdmin);

// get user
app.get("/profile", authMiddleware, roleMiddleWare, getUser);

// get products
app.get("/products", roleMiddleWare, getProducts);

// create product
app.post("/products", authMiddleware, roleMiddleWare, createProduct);

// get product by id
app.get("/products/:id", roleMiddleWare, getProduct);

// update product
app.put("/products/:id", authMiddleware, roleMiddleWare, updateProduct);

// delete product
app.delete("/products/:id", authMiddleware, roleMiddleWare, deleteProduct);

// get cart
app.get("/cart", authMiddleware, roleMiddleWare, getCart);

// add to cart
app.post("/cart", authMiddleware, roleMiddleWare, addToCart);

// update cart
app.put("/cart", authMiddleware, roleMiddleWare, updateCart);

// remove from cart
app.delete("/cart", authMiddleware, roleMiddleWare, removeFromCart);

app.listen(Env.PORT, () => {
  console.log(`server is running on http://localhost:${Env.PORT}`);
});
